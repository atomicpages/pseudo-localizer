{
  "name": "pseudo-localizer",
  "version": "0.2.0",
  "description": "A tiny pseudo localization utility that doesn't mangle strings",
  "keywords": [
    "pseudo",
    "pseudo-localizer",
    "i18n",
    "l12n",
    "localization",
    "testing"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/atomicpages/pseudo-localizer.git"
  },
  "license": "MIT",
  "author": "Dennis Thompson",
  "main": "dist/cjs/index.js",
  "module": "dist/esm/index.js",
  "types": "dist/types/index.d.ts",
  "files": [
    "dist",
    "src"
  ],
  "scripts": {
    "prepare": "husky install",
    "test": "tape -r ts-node/register/transpile-only 'src/__tests__/**/*.test.ts' | tap-diff",
    "benchmark": "ts-node-script benchmark/index.ts",
    "lint": "eslint src --ext=ts,tsx,js",
    "build:esm": "esbuild src/index.ts --bundle --sourcemap --format=esm --outfile=dist/esm/index.js",
    "build:cjs": "esbuild src/index.ts --bundle --sourcemap --format=cjs --outfile=dist/cjs/index.js",
    "build:types": "tsc --emitDeclarationOnly",
    "build": "npm-run-all -p build:*",
    "check-types": "tsc --noEmit",
    "prepush": "npm-run-all -p lint test check-types"
  },
  "prettier": "@djthoms/prettier-config",
  "eslintConfig": {
    "env": {
      "node": true
    },
    "extends": [
      "@djthoms/eslint-config",
      "@djthoms/eslint-config/esmodules",
      "@djthoms/eslint-config/typescript"
    ]
  },
  "devDependencies": {
    "@djthoms/eslint-config": "^4.3.0",
    "@djthoms/prettier-config": "^4.0.0",
    "@types/benchmark": "^2.1.0",
    "@types/glob": "^7.2.0",
    "@types/tape": "^4.13.0",
    "benchmark": "^2.1.4",
    "esbuild": "^0.14.11",
    "husky": "^7.0.4",
    "lint-staged": "^12.2.0",
    "microtime": "^3.0.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.1.1",
    "tap-diff": "^0.1.1",
    "tape": "^5.0.1",
    "ts-node": "^10.0.0",
    "typescript": "^4.0.2"
  },
  "lint-staged": {
    "*.{ts,js,json}": [
      "prettier --write",
      "eslint --fix"
    ],
    "*.{md,yml}": "prettier --write"
  }
}
